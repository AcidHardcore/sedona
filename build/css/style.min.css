/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */

/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */

html
{
    font-family: sans-serif;
    /* 2 */

    -webkit-text-size-adjust: 100%;
    /* 1 */
        -ms-text-size-adjust: 100%;
    /* 2 */
}

/**
 * Remove the margin in all browsers (opinionated).
 */

body
{
    margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */

article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary
{
    /* 1 */
    display: block;
}

/**
 * Add the correct display in IE 9-.
 */

audio,
canvas,
progress,
video
{
    display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */

audio:not([controls])
{
    display: none;

    height: 0;
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress
{
    vertical-align: baseline;
}

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */

template,
[hidden]
{
    display: none;
}

/* Links
   ========================================================================== */

/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */

a
{
    background-color: transparent;
    /* 1 */

    -webkit-text-decoration-skip: objects;
    /* 2 */
}

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */

a:active,
a:hover
{
    outline-width: 0;
}

/* Text-level semantics
   ========================================================================== */

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title]
{
    /* 1 */
    text-decoration: underline;
    /* 2 */
    text-decoration: underline dotted;

    border-bottom: none;
    /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */

b,
strong
{
    font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong
{
    font-weight: bolder;
}

/**
 * Add the correct font style in Android 4.3-.
 */

dfn
{
    font-style: italic;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1
{
    margin: .67em 0;

    font-size: 2em;
}

/**
 * Add the correct background and color in IE 9-.
 */

mark
{
    color: #000;
    background-color: #ff0;
}

/**
 * Add the correct font size in all browsers.
 */

small
{
    font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup
{
    position: relative;

    vertical-align: baseline;

    font-size: 75%;
    line-height: 0;
}

sub
{
    bottom: -.25em;
}

sup
{
    top: -.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove the border on images inside links in IE 10-.
 */

img
{
    border-style: none;
}

/**
 * Hide the overflow in IE.
 */

svg:not(:root)
{
    overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
pre,
samp
{
    font-family: monospace, monospace;
    /* 1 */
    font-size: 1em;
    /* 2 */
}

/**
 * Add the correct margin in IE 8.
 */

figure
{
    margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr
{
    /* 1 */
    overflow: visible;

    box-sizing: content-box;
    /* 1 */
    height: 0;
    /* 2 */
}

/* Forms
   ========================================================================== */

/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
select,
textarea
{
    /* 1 */
    margin: 0;

    font: inherit;
    /* 2 */
}

/**
 * Restore the font weight unset by the previous rule.
 */

optgroup
{
    font-weight: bold;
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input
{
    /* 1 */
    overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select
{
    /* 1 */
    text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */

button,
html [type="button"],
[type="reset"],
[type="submit"]
{
    -webkit-appearance: button;
    /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner
{
    padding: 0;

    border-style: none;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring
{
    outline: 1px dotted ButtonText;
}

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */

fieldset
{
    margin: 0 2px;
    padding: .35em .625em .75em;

    border: 1px solid #c0c0c0;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend
{
    /* 2 */
    display: table;

    box-sizing: border-box;
    /* 1 */
    max-width: 100%;
    /* 1 */
    padding: 0;
    /* 3 */

    white-space: normal;
    /* 1 */

    color: inherit;
    /* 1 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */

textarea
{
    overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */

[type="checkbox"],
[type="radio"]
{
    box-sizing: border-box;
    /* 1 */
    padding: 0;
    /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button
{
    height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"]
{
    /* 1 */
    outline-offset: -2px;

    -webkit-appearance: textfield;
    /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration
{
    -webkit-appearance: none;
}

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */

::-webkit-input-placeholder
{
    opacity: .54;
    color: inherit;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button
{
    /* 1 */
    font: inherit;

    -webkit-appearance: button;
    /* 2 */
}

body
{
    min-width: 320px;
    margin: 0;
    padding: 0;

    text-transform: uppercase;

    color: #333;
    background: #fff;

    font-family: "PT Sans Regular", "Arial", sans-serif;
    font-size: 14px;
    line-height: 21px;
}

/*defend from overload img*/

img
{
    max-width: 100%;
    height: auto;
}

.page-header__logo-wrapper
{
    z-index: 10;

    width: 67px;
    margin: 0 auto;
}

.page-nav
{
    position: relative;

    background-color: #81b3d2;
}

.page-nav ul
{
    margin: 0;
    padding: 0;

    list-style: none;
}

.page-nav li
{
    text-align: center;

    box-shadow: 0 1px 0 0 rgba(0, 0, 0, .2), inset 0 1px 0 0 rgba(255, 255, 255, .2);

    font-size: 18px;
    line-height: 40px;
}

.page-nav li:last-child
{
    box-shadow: 0 1px 0 0 rgba(1, 1, 1, .2), inset 0 1px 0 0 rgba(255, 255, 255, .2), inset 0 -2px 0 0 rgba(0, 0, 0, .2);
}

.page-nav a
{
    display: block;

    padding: 8px 0;

    text-decoration: none;

    color: white;

    font-family: "PT Sans Bold", "Arial", sans-serif;
}

.page-nav::before
{
    position: absolute;
    top: 25px;
    right: 20px;

    width: 23px;
    height: 4px;

    content: "";
    -webkit-transform: rotate(45deg);
            transform: rotate(45deg);

    border-radius: 1px;
    background-color: white;
}

.page-nav::after
{
    position: absolute;
    top: 25px;
    right: 20px;

    width: 23px;
    height: 4px;

    content: "";
    -webkit-transform: rotate(-45deg);
            transform: rotate(-45deg);

    border-radius: 1px;
    background-color: white;
}

.page-nav__collapse
{
    position: absolute;
    right: 20px;
    bottom: auto;

    padding: 0;

    border: 0;
    background-color: transparent;
}

.page-nav__collapse span:first-child
{
    margin-top: 18px;
}

.page-nav__row
{
    display: block;

    width: 23px;
    height: 4px;
    margin-top: 5px;

    background-color: #81b3d2;
}

.intro
{
    height: 390px;

    background-image: url("../img/photo-background@1x.jpg");
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
}

.reasons
{
    position: relative;

    text-align: center;
}

.reasons__inner
{
    margin: 0 auto;
}

.reasons__title
{
    max-width: 295px;
    margin: 0 auto;
    padding-top: 40px;
    padding-bottom: 40px;

    color: #000;

    font-family: "PT Sans Bold", "Arial", "sans-serif";
    font-size: 18px;
    line-height: 26px;
}

.reasons__desc
{
    max-width: 295px;
    margin: 0 auto;
    padding-bottom: 30px;

    line-height: 26px;
}

.reasons::before
{
    position: absolute;
    top: -32px;

    display: block;

    width: 100%;
    height: 32px;
    margin: 0 auto;

    content: "";

    background-color: transparent;
    background-image: linear-gradient(to right bottom, transparent 50%, #fff 50%), linear-gradient(to left bottom, transparent 50%, #fff 50%);
}

.reason
{
    background-color: #81b3d2;
}

.reason__inner
{
    max-width: 295px;
    margin: 0 auto;
}

.reason--bg
{
    background-color: #eee;
}

.reason--delimiter::after
{
    position: relative;

    display: block;

    margin-right: 20px;
    margin-left: 20px;

    content: "";

    border-bottom: 1px solid #d6d6d6;
}

.reason__title
{
    margin: 0;
    padding-top: 40px;
    padding-bottom: 20px;

    color: #000;

    font-size: 18px;
    line-height: 26px;
}

.reason__number
{
    position: relative;
    z-index: 2;

    display: inline-block;

    margin: 0;
    padding-right: 5px;
    padding-bottom: 25px;
    padding-left: 5px;

    background-color: #eee;
}

.reason__number-inner::after
{
    position: relative;
    z-index: 1;
    top: -35px;

    display: block;

    width: 50px;
    margin: 0 auto;

    content: "";

    border-bottom: 1px solid #a8a8a8;
}

.reason__desc
{
    margin: 0;
    padding-bottom: 45px;
}

.reason__inner--color,
.reason__title--color
{
    color: #fff;
}

.reason__number--color
{
    background-color: #81b3d2;
}

.reason__number-inner--color::after
{
    border-bottom: 1px solid #fff;
}

.reason__image
{
    height: 256px;
}

.reason__image--city
{
    background-image: url("../img/photo-city@1x.jpg");
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
}

.reason__image--bridge
{
    background-image: url("../img/photo-bridge@1x.jpg");
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
}

.reason--gradient::before
{
    display: block;

    width: 100%;
    height: 32px;
    margin: 0 auto;

    content: "";

    background-color: #fff;
    background-image: linear-gradient(to right bottom, transparent 50%, #81b3d2 50%), linear-gradient(to left bottom, transparent 50%, #81b3d2 50%);
}

.features
{
    background-color: #fff;
}

.features__inner
{
    max-width: 240px;
    margin: 0 auto;

    text-align: left;
}

.features__title
{
    padding-top: 40px;
    padding-bottom: 25px;

    color: #000;

    font-family: "PT Sans Bold", "Arial", "sans-serif";
    font-size: 18px;
    line-height: 26px;
}

.features__desc:last-child
{
    padding-bottom: 45px;
}

@media ("min-width: 768px")
{
    .container
    {
        width: 768px;
    }

    .page-header__inner
    {
        width: 768px;
    }

    .page-content__inner
    {
        width: 768px;
    }
}

@media ("min-width: 1200px")
{
    .container
    {
        width: 1200px;
    }

    .page-header__inner
    {
        width: 1200px;
    }

    .page-content__inner
    {
        width: 1200px;
    }
}

@media ("max-width: 767px")
{
    .container
    {
        width: 767px;
        margin: 0 auto;
    }

    .page-header__inner
    {
        width: 767px;
        margin: 0 auto;
    }

    .page-content__inner
    {
        width: 767px;
        margin: 0 auto;
    }
}

@media "max-width: 767px"
{
    .reason__image
    {
        height: 260px;
    }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi)
{
    .intro
    {
        background-image: url("../img/photo-background@2x.jpg");
    }

    .reason__image--city
    {
        background-image: url("../img/photo-city@2x.jpg");
    }

    .reason__image--bridge
    {
        background-image: url("../img/photo-bridge@2x.jpg");
    }
}

/*# sourceMappingURL=data:application/json;base64, */
